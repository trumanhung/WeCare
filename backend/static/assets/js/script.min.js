function mutationCallback(e){e.forEach(e=>{if("class"===e.attributeName){const t=e.target.firstChild.id,o=!e.target.classList.contains("off");localStorage[t]!==o.toString()&&(set_local_storage({[t]:o}),updateSetting(t,o))}})}$(document).ready(function(){$("[data-bs-hover-animate]").mouseenter(function(){var e=$(this);e.addClass("animated "+e.attr("data-bs-hover-animate"))}).mouseleave(function(){var e=$(this);e.removeClass("animated "+e.attr("data-bs-hover-animate"))})}),$(document).ready(function(){sw_registration(),console.log("Local storage data:\n================================================");const e=Object.keys(localStorage);for(let t in e)console.log(`${e[t]}: ${localStorage.getItem(e[t])}`);console.log("================================================"),document.querySelector(".nav")&&document.querySelectorAll(".nav-item").forEach(e=>{e.addEventListener("click",e=>{document.querySelectorAll(".nav-item").forEach(e=>{e.firstChild.classList.remove("active")}),e.target.firstChild.classList.add("active"),e.target.classList.add("active")})});let t=!1;$("#setting-modal .toggle").map(function(){preloadSetting.call(this),this.classList.contains("off")||(t=!0),mutationObserver.observe(this,{attributes:!0})}),t||$("#setting-modal").modal("show")});const mutationObserver=new MutationObserver(mutationCallback);function preloadSetting(){void 0!==localStorage[this.firstChild.id]?"true"===localStorage[this.firstChild.id]?(this.classList.add("btn-success"),this.classList.remove("off","btn-default")):(this.classList.add("off","btn-default"),this.classList.remove("btn-success")):console.error(`${this.firstChild.id} is not in Local Storage`)}function set_local_storage(e){for(let t in e)localStorage.setItem(t,e[t])}function get_user_setting(e){return new Promise((t,o)=>{$.get(`/users/settings/${e}`,function(e,o){console.log(`Retrieve user setting: ${o}`),console.log(e),0===Object.keys(e).length&&e.constructor===Object&&(console.error("user setting is not initialized"),t(e)),t(JSON.parse(e))})})}function updateSetting(e,t){const o={};return o.email=localStorage.getItem("email"),o[e]=t,$.ajax({type:"POST",url:"/users/settings",data:JSON.stringify(o),contentType:"application/json; charset=utf-8",dataType:"json",success:t=>{console.log(`Updated ${e} to ${o[e]}`)},failure:function(e){console.log(`Update setting failed: ${e}`)}})}function get_user_profile(e){return $.get(`/users/${e}`,function(e){profile=e.profile})}function set_profile(e,t,o,s,a,i,r){return data={first_name:e,last_name:t,date_of_birth:o,gender:s,email:a,description:i},void 0!==r&&(data.image_url=r),$.ajax({type:"POST",url:"/users",data:JSON.stringify(data),contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{console.log(`Create profile: ${e.create_a_user_success}`)},failure:function(e){console.log(`Create profile failed: ${e}`)}})}function sw_registration(){"serviceWorker"in navigator?window.addEventListener("load",function(){navigator.serviceWorker.register("service-worker.js").then(e=>{console.log("Service worker registered! ðŸ˜Ž",e)}).catch(e=>{console.log("ðŸ˜¥ Service worker registration failed: ",e)})}):console.log("sw not supported")}function acceptRequest(){console.log("User accepted request");let e=document.querySelector("#accept-request-modal .modal-body #requester-email").innerText;console.log(`Do something with ${e}`)}function initAcceptRequestModal(e,t){document.querySelector("#accept-request-modal .modal-body #requester-email").innerText=e,document.querySelector("#accept-request-modal .modal-body #requester-message").innerText=t}